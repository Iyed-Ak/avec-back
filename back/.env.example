# ===================================
# VARIABLES D'ENVIRONNEMENT SÉCURISÉES
# ===================================

# Base de données MongoDB
MONGO_URI=mongodb://localhost:27017/ifc-formation

# JWT Secret - IMPORTANT: Utilisez un secret fort en production (minimum 32 caractères)
# Générez un secret fort avec: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=votre_secret_jwt_tres_fort_minimum_32_caracteres_aleatoires

# Configuration du serveur
PORT=3000
NODE_ENV=development

# URL du frontend (pour CORS)
FRONTEND_URL=http://localhost:4200

# Configuration des logs
LOG_LEVEL=info

# Configuration de sécurité
# Durée de vie des tokens JWT (en secondes ou format string comme '24h', '7d')
JWT_EXPIRES_IN=24h

# Limite de tentatives de connexion par IP
LOGIN_ATTEMPTS_LIMIT=5

# Durée de blocage après dépassement des tentatives (en minutes)
LOGIN_BLOCK_DURATION=15

# Configuration rate limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Configuration email (optionnel pour notifications de sécurité)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=votre-email@gmail.com
# SMTP_PASS=votre-mot-de-passe-app

# Configuration monitoring (optionnel)
# MONITORING_WEBHOOK_URL=https://hooks.slack.com/services/...
# ALERT_EMAIL=admin@votre-domaine.com

# ===================================
# NOTES DE SÉCURITÉ
# ===================================

# 1. Ne jamais commiter ce fichier avec de vraies valeurs
# 2. Utilisez des secrets forts générés aléatoirement
# 3. Changez les secrets régulièrement en production
# 4. Limitez l'accès aux variables d'environnement
# 5. Utilisez des services de gestion de secrets en production (AWS Secrets Manager, Azure Key Vault, etc.)
